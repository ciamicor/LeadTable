@use "config/config" as c;
/*-| Setup |-*/
/*/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/*/
/*-| Layout |-*/
/*---+----+---+----+---+----+---+----+---*/
.--full {
  max-width: 100%;
  margin:    0 !important;
}

.container {
  display:       flex;
  flex:          1 1 auto;
  flex-flow:     row wrap;
  place-content: center;
  place-items:   center;
  gap:           c.$row-gap;
  width:         100dvw;
  max-width:     c.$max-page-width;
  margin:        auto;
}

.row {
  display:       flex;
  flex:          1 1 auto;
  flex-flow:     row wrap;
  place-content: center;
  gap:           c.$row-gap;
  max-width:     c.$max-page-width;
  margin:        0 auto;
  padding:       c.$sp-v-2 c.$sp-v-4;
  &.--items {
    margin:  0;
    padding: 0;
  }
}

/*-| Flex |-*/
/*---+----+---+----+---+----+---+----+---*/

/*-| Columns by Breakpoint |-*/
// @each $bp, $size in $breakpoints {
@for $size from 3 through 16 {
  @for $i from 1 through c.$column-number {
    /*-| Columns |-*/
    .col-#{$i}-#{$size * 100} {
      display:   flex;
      flex-flow: column nowrap;
      gap:       c.$col-gap;
      & > *:not(.button,button) + .button,
      & > *:not(.button,button) + button {
        margin-top: c.$sp-4;
      }
      & > .button:has(+ *:not(.button, button)),
      & > button:has(+ *:not(.button, button)) {
        margin-bottom: c.$sp-6;
      }
      @include c.breakpoint($size * 100) {
        flex:  0 1 calc((100% * calc($i / #{c.$column-number})) - #{c.$row-gap});
        width: calc((100% * calc($i / #{c.$column-number})) - #{c.$row-gap});
      }
    }
    /*-| Rows |-*/
    .row-#{$i}-#{$size * 100} {
      display:   flex;
      flex-flow: row wrap;
      gap:       c.$col-gap;
      /*      & > *:not(.button,button) + .button,
            & > *:not(.button,button) + button {
              margin-top: c.$sp-4;
            }
           & > .button:has(+ *:not(.button, button)),
            & > button:has(+ *:not(.button, button)) {
              margin-bottom: c.$sp-6;
            }*/
      @include c.breakpoint($size * 100) {
        flex:  0 1 calc((100% * ($i / #{c.$column-number})) - #{c.$row-gap});
        width: calc((100% * ($i / #{c.$column-number})) - #{c.$row-gap});
      }
    }
  }
}

.--flex-grow {
  flex-grow: 1;
}

.--flex-shrink {
  flex-shrink: 1;
}

/*-| Position |-*/
/*/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/*/
.--pos-fixed {
  position: fixed;
}
