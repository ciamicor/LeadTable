/*-| Variables |-*/
/*/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/*/
$column-number:       12;
$max-page-width:      1600px;
$row-gap:             $sp-4;
$col-gap:             $sp-4;
/*-| Breakpoints |-*/
$breakpoints:         (
                        xxxs: 300,
                        xxs: 400,
                        xs: 500,
                        sm: 700,
                        md: 900,
                        lg: 1100,
                        xl: 1400,
                        xxl: 1600,
                      );
/*-| Setup |-*/
/*/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/*/
/*-| Breakpoints |-*/
/*---+----+---+----+---+----+---+----+---*/
@mixin breakpoint($breakpoint) {
  @media (min-width: #{$breakpoint}px) {
    @content
  }
}

/*-| Layout |-*/
/*---+----+---+----+---+----+---+----+---*/
.section {
  display:   flex;
  flex:      1 1 auto;
  flex-flow: row wrap;
  gap:       $row-gap;
  width:     100dvw;
  max-width: $max-page-width;
  margin:    0;
  padding:   $sp-v-8;
}

.row {
  display:       flex;
  flex:          1 1 auto;
  flex-flow:     row wrap;
  place-content: center;
  gap:           $row-gap;
  max-width:     $max-page-width;
  margin:        0 auto;
  padding:       $sp-v-2 $sp-v-2;
  &.--full {
    max-width: 100%;
    margin:    0 !important;
  }
  &.--items {
    margin:  0;
    padding: 0;
  }
}

$grid-card-min-width: 400;
$grid-card-h-padding: 20;
.adapt-grid {
  display:            grid;
  grid-template-rows: auto;
  gap:                min(24px, 2vw);
  padding:            0 0 $sp-v-14;
  @for $c from 1 through 4 {
    $gap-base: 8;
    $bp:       $c * $grid-card-min-width;
    @include breakpoint(calc($bp + (($grid-card-h-padding * 2) * $c))) {
      grid-template-columns: repeat($c, minmax(#{$grid-card-min-width + "px" }, 1fr));
    }
  }
}

/*-| Columns by Breakpoint |-*/
// @each $bp, $size in $breakpoints {
@for $size from 3 through 16 {
  @for $i from 1 through $column-number {
    .col-#{$i}-#{$size * 100} {
      display:   flex;
      flex-flow: column nowrap;
      gap:       $col-gap;
      & > *:not(.button,button) + .button,
      & > *:not(.button,button) + button {
        margin-top: $sp-4;
      }
      & > .button:has(+ *:not(.button, button)),
      & > button:has(+ *:not(.button, button)) {
        margin-bottom: $sp-6;
      }
      @include breakpoint($size * 100) {
        flex:  0 1 calc((100% * ($i / $column-number)) - $row-gap);
        width: calc((100% * ($i / $column-number)) - $row-gap);
      }
    }
    .row-#{$i}-#{$size * 100} {
      display:   flex;
      flex-flow: row wrap;
      gap:       $col-gap;
      & > *:not(.button,button) + .button,
      & > *:not(.button,button) + button {
        margin-top: $sp-4;
      }
      & > .button:has(+ *:not(.button, button)),
      & > button:has(+ *:not(.button, button)) {
        margin-bottom: $sp-6;
      }
      @include breakpoint($size * 100) {
        flex:  0 1 calc((100% * ($i / $column-number)) - $row-gap);
        width: calc((100% * ($i / $column-number)) - $row-gap);
      }
    }
  }
}

.--f-grow {
  flex-grow: 1;
}

.--f-shrink {
  flex-shrink: 1;
}

/*-| Placement |-*/
/*/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/*/
$align-type:          (
                        "place",
                        "justify",
                        "align"
                      );
$align-subject:       (
                        "self",
                        "items",
                        "content"
                      );
$align-area:          (
                        "start",
                        "center",
                        "end",
                        "stretch"
                      );
@each $type in $align-type {
  @each $subject in $align-subject {
    @each $area in $align-area {
      .--#{$type}-#{$subject}-#{$area} {
        #{$type}-#{$subject}: #{$area}
      }
    }
  }
}

/*-| Position |-*/
/*/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/*/
.--pos-fixed {
  position: fixed;
}

/*-| Sizing |-*/
/*/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/==/*/
.--h-100 {
  height: 100%;
}
